
@model Raja_Country.Models.Location

@{
    var countries = ViewData["Countries"] as List<Country>;
    var states = ViewData["State"] as List<State>;
    var districts = ViewData["District"] as List<District>;

    var jsonStates = JsonConvert.SerializeObject(states);
    var jsonDistricts = JsonConvert.SerializeObject(districts);
}



<div>
    <h3>Delete Location</h3>
    <form asp-action="DeletePage" method="post" id="locationForm">
        <label asp-for="Id" style="display:none;">Id:</label>
        <input type="text" asp-for="Id" style="display:none;" readonly/>

        <label asp-for="Country" for="countryDropDown">Country:</label>
        <select name="Country" id="countryDropDown" class="form-control" disabled>
            @foreach (var c in countries)
            {
                if (Model.Country == c.Name)
                {
                            <option value="@c.Name" selected>@c.Name</option>
                }
                else
                {
                            <option value="@c.Name">@c.Name</option>
                }
            }
        </select>

        <label asp-for="State">State:</label>
        <select name="State" id="stateDropdown" class="form-control" disabled>
            @foreach (var s in states.Where(s => s.CountryName == Model.Country))
            {
                if (Model.State == s.Name)
                {
                            <option value="@s.Name" selected>@s.Name</option>
                }
                else
                {
                            <option value="@s.Name">@s.Name</option>
                }
            }
        </select>

        <label asp-for="District">District:</label>
        <select name="District" id="districtDropdown" class="form-control" disabled>
            @foreach (var d in districts.Where(d => d.StateName == Model.State))
            {
                    <option val></option>
                if (d.Name == Model.District)
                {
                            <option value="@d.Name" selected>@d.Name</option>
                }
                else
                {
                            <option value="@d.Name">@d.Name</option>
                }
            }
        </select>

        <br />
        <a href="~/Country/Details" class="btn btn-primary">Back
        </a>
        <a href="~/Country/Delete?id=@Model.Id" class="btn btn-primary" onclick="return confirm('Are you sure you want to delete this item?');">
            Delete
        </a>
        
    </form>
</div>

<script>
        let allStates = @Html.Raw(jsonStates);
    let allDistricts = @Html.Raw(jsonDistricts);

    document.addEventListener("DOMContentLoaded", function () {
        let countryDrop = document.getElementById("countryDropDown");
        let stateDrop = document.getElementById("stateDropdown");
        let districtDrop = document.getElementById("districtDropdown");

        // Function to populate states based on selected country
        function populateStates(selectedCountry, selectedState = null, selectedDistrict = null) {
            let filteredStates = allStates.filter(s => s.CountryName === selectedCountry);
            stateDrop.innerHTML = '<option value="" disabled> -- Select State -- </option>';

            filteredStates.forEach(s => {
                let opt = document.createElement("option");
                opt.value = s.Name;
                opt.text = s.Name;
                if (s.Name === selectedState) opt.selected = true;
                stateDrop.add(opt);
            });

            // Populate districts after setting states
            populateDistricts(selectedState, selectedDistrict);
        }

        // Function to populate districts based on selected state
        function populateDistricts(selectedState, selectedDistrict = null) {
            if (!selectedState) {
                districtDrop.innerHTML = '<option value="" disabled selected> -- Select District -- </option>';
                return;
            }

            let filteredDistricts = allDistricts.filter(d => d.StateName === selectedState);
            districtDrop.innerHTML = '<option value="" disabled> -- Select District -- </option>';
            districtDrop.disabled = true;

            filteredDistricts.forEach(d => {
                let opt = document.createElement("option");
                opt.value = d.Name;
                opt.text = d.Name;
                if (d.Name === selectedDistrict) opt.selected = true;
                districtDrop.add(opt);
            });
        }

        // Initial selected values from Razor-generated HTML
        let selectedCountry = countryDrop.value;
        let selectedState = stateDrop.value;
        let selectedDistrict = districtDrop.value;

        // Initial load with all selected values
        populateStates(selectedCountry, selectedState, selectedDistrict);

        // Country change event
        countryDrop.addEventListener("change", function () {
            populateStates(this.value);
        });

        // State change event
        stateDrop.addEventListener("change", function () {
            populateDistricts(this.value);
        });
    });
</script>
